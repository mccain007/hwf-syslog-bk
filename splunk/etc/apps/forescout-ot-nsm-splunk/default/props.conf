[forescout:OTSM:logs:alert]
EVAL-app = "forescout:eyeInspect"
EVAL-severity_id = case( severity == "Informational", "0", severity == "Low", "1", severity == "Medium", 2, severity == "High", 3, severity == "Critical", 4 )
EVAL-type = "alert"
FIELDALIAS-Alerts_DM = alertId ASNEW id desc ASNEW description dstIp ASNEW dest name ASNEW signature severity ASNEW vendor_severity srcIp ASNEW src typeId ASNEW signature_id
SHOULD_LINEMERGE = 0
TIME_PREFIX = "time":
pulldown_type = 0

[forescout:OTSM:logs:health]
KV_MODE = json
SHOULD_LINEMERGE = 0
TIME_PREFIX = "time":
pulldown_type = 0

[forescout:OTSM:logs:network]
KV_MODE = json
SHOULD_LINEMERGE = 0
TIME_PREFIX = "time":
pulldown_type = 0

[forescout:OTSM:logs:sink]
KV_MODE = json
SHOULD_LINEMERGE = 0
TIME_PREFIX = "time":
TRANSFORMS-force_sourcetype_sd = force_sourcetype_forescout_otsm_health,force_sourcetype_forescout_otsm_alert,force_sourcetype_forescout_otsm_network,force_sourcetype_forescout_otsm_useractivity
category = Network & Security
description = Global 'sink' object for *all* output data generated by Forescout's OT Network Security Monitoring solution
pulldown_type = 0

[forescout:OTSM:logs:useractivity]
KV_MODE = json
SHOULD_LINEMERGE = 0
TIME_PREFIX = "time":
pulldown_type = 0

[forescout:OTSM:REST:hosts]
TRANSFORMS-use_indextime = use_indextime
EVAL-asset_model = mvjoin( spath( _raw, "module_identities{}.model" ), "|" )
EVAL-asset_status = mvjoin( spath( _raw, "module_identities{}.state" ), "|" )
EVAL-asset_version = if( firmware_version != "", if( hardware_version != "", mvjoin( mvappend( "FW: " + firmware_version, "HW: " + hardware_version ), " - " ), "FW: " + firmware_version ), if( hardware_version != "", "HW: " + hardware_version, if( os_version != "", "OS: " + os_version, "" ) ) )
EVAL-category = "OT|ICS"
EVAL-classification = "cip:" + spath( _raw, "nerc_cip_classifications{}.impact" ) + "|cip:" + spath( _raw, "nerc_cip_classifications{}.category" )
EVAL-cve = mvjoin( spath( _raw, "cves{}.cve_id" ), "|" )
EVAL-exposure = if( public_ip == "true", "public", "private" )
EVAL-mac = if(mvjoin(coalesce(spath(_raw, "host_mac_addresses{}.mac_address"), spath(_raw, "mac_addresses{}")), "|") != "FF:FF:FF:FF:FF:FF", mvjoin(coalesce(spath(_raw, "host_mac_addresses{}.mac_address"), spath(_raw, "mac_addresses{}")), "|"), null)
EVAL-priority = max( operational_risk, security_risk )
EVAL-product_details = coalesce( description, labels )
EVAL-vendor_product = "forescout:eyeinspect"
EVAL-zone = "purdue:level" + level
EXTRACT-level = \"purdue_level\"\s*:\s*\"LEVEL(?<level>\d)
FIELDALIAS-Asset_DM = host ASNEW dvc id ASNEW asset_id ip ASNEW dest main_name ASNEW nt_host main_role ASNEW asset_type main_vendor_model ASNEW asset_vendor serial_number ASNEW serial vlan ASNEW vlan
SHOULD_LINEMERGE = 0
category = Splunk App Add-on Builder
pulldown_type = 1
EVAL-asset_criticality = case(criticality == "1", "Informational", criticality == "2", "Low", criticality == "3", "Medium", criticality == "4", "High", criticality == "5", "Critical")

[forescout:OTSM:REST:links]
TRANSFORMS-use_indextime = use_indextime
SHOULD_LINEMERGE = 0
category = Splunk App Add-on Builder
pulldown_type = 1

[source::...forescout-ot-nsm-splunk*.log*]
sourcetype = forescoutotnsmsplunk:log

