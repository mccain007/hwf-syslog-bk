[crowdstrike:falconhost:query:json]
DATETIME_CONFIG = NONE
TRUNCATE = 0
KV_MODE  = JSON
TZ = UTC
SHOULD_LINEMERGE = false

[source::.../devices/entities/devices/v1*]
#Inventory CIM fields
FIELDALIAS-value_dest = resources.hostname AS dest
FIELDALIAS-value_serial = resources.device_id AS serial
FIELDALIAS-value_status = resources.status AS status
FIELDALIAS-value_vendor_product = resources.system_product_name AS vendor_product
FIELDALIAS-value_ip = resources.external_ip AS ip
FIELDALIAS-value_mac = resources.mac_address AS mac
FIELDALIAS-value_os = resources.platform_name AS os

[source::.../indicators/entities/iocs/v1*]
#Malware CIM fields
FIELDALIAS-value_dest = resources.value AS dest
FIELDALIAS-value_dest_file = resources.value AS file_hash
FIELDALIAS-type_category = resources.type AS category

# Change CIM fields
EVAL-vendor_product = "CrowdStrike Falcon"

[source::.../detects/entities/summaries/GET/v1]
# Malware CIM fields
FIELDALIAS-detect_dest = resources.device.hostname AS dest
FIELDALIAS-detect_dest_nt_domain = resources.device.machine_domain AS dest_nt_domain
FIELDALIAS-detect_date = _time AS date
EVAL-file_hash = if(isnull('resources.behaviors{}.md5') OR 'resources.behaviors{}.md5'="", 'resources.behaviors{}.sha256', 'resources.behaviors{}.md5')

# Common CIM fields (authentication and malware)
FIELDALIAS-detect_src = resources.detection_id AS src
EVAL-user = if(isnotnull('resources.behaviors{}.user_id'), 'resources.behaviors{}.user_id', 'resources.behaviors{}.user_name')

# Change CIM fields
EVAL-vendor_product = "CrowdStrike Falcon"

[crowdstrike:falconhost:json]
DATETIME_CONFIG = NONE
TRUNCATE = 100000
KV_MODE  = JSON
TZ = UTC
SHOULD_LINEMERGE = false

# General fields
FIELDALIAS-cs_event = metadata.eventType AS cs_event

# Common CIM fields (authentication and malware)
EVAL-action = case(match('metadata.eventType',"AuthActivityAuditEvent") and match(lower('event.Success'), "true"), "success", match('metadata.eventType',"AuthActivityAuditEvent") and match(lower('event.Success'), "false"), "failure", match('metadata.eventType', "UserActivityAuditEvent"), "modified", match('event.DetectName',"Blocked Hash"), "blocked", (1==1), "unknown")
EVAL-src = if(isnotnull('event.UserIp'), 'event.UserIp', 'event.SensorId')
EVAL-user = if(isnotnull('event.UserId'), 'event.UserId', 'event.UserName')

# Authentication CIM fields
EVAL-app = case(match('metadata.eventType', "AuthActivityAuditEvent"), 'event.ServiceName')

# Malware CIM fields
EVAL-signature = if(isnull(spath(_raw, "event.ScanResults{0}.ResultName")) and match('metadata.eventType', "DetectionSummaryEvent"), 'event.DetectName', spath(_raw, "event.ScanResults{0}.ResultName"))
EVAL-category = case(match(lower(spath(_raw, "event.ScanResults{0}.ResultName")), "backdoor|trojan|trj"), "trojan", match(spath(_raw, "event.ScanResults{0}.ResultName"), ""), "unknown")
EVAL-dest = if(isnull('event.ComputerName'), source, 'event.ComputerName')
FIELDALIAS-dest_nt_domain = event.MachineDomain AS dest_nt_domain
EVAL-file_hash = if(isnull('event.MD5String') OR 'event.MD5String'="", if(isnull('event.SHA1String') OR 'event.SHA1String'="", 'event.SHA256String', 'event.SHA1String'), 'event.MD5String')
FIELDALIAS-date = _time AS date
FIELDALIAS-file_name = event.FileName AS file_name
FIELDALIAS-file_path = event.FilePath AS file_path
FIELDALIAS-url = event.FalconHostLink AS url

# Change CIM fields
EVAL-vendor_product = "CrowdStrike Falcon"
EVAL-change_type = case(match('metadata.eventType', "UserActivityAuditEvent"), "AAA")
EVAL-object_id = if(spath(_raw, "event.AuditKeyValues{0}.Key") == "detects", spath(_raw, "event.AuditKeyValues{0}.ValueString"), null)
EVAL-result = case(match('metadata.eventType', "UserActivityAuditEvent"), if(lower('event.Success') == "true", "success", "failure"))
EVAL-status = case(match('metadata.eventType', "UserActivityAuditEvent"), if(lower('event.Success') == "true", "success", "failure"))

[source::...TA-crowdstrike_falcon_host_api.log*]
sourcetype = crowdstrike:falconhost:log
SHOULD_LINEMERGE = true
BREAK_ONLY_BEFORE = \d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d+\s\+\d{4}\slog_level=

[source::...TA-crowdstrike_ucc_lib.log*]
sourcetype = crowdstrike:ucclib:log
SHOULD_LINEMERGE = true
BREAK_ONLY_BEFORE = \d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d+\s\+\d{4}\slog_level=

[source::...TA-crowdstrike_util.log*]
sourcetype = crowdstrike:util:log
SHOULD_LINEMERGE = true
BREAK_ONLY_BEFORE = \d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d+\s\+\d{4}\slog_level=

[stash_common_action_model]
TRUNCATE = 0
# only look for ***SPLUNK*** on the first line
HEADER_MODE = firstline
# we can summary index past data, but rarely future data
MAX_DAYS_HENCE      = 2
MAX_DAYS_AGO        = 10000
# 5 years difference between two events
MAX_DIFF_SECS_AGO   = 155520000
MAX_DIFF_SECS_HENCE = 155520000
MAX_TIMESTAMP_LOOKAHEAD = 64
LEARN_MODEL = false
# break .stash_new custom format into events
SHOULD_LINEMERGE       = false
BREAK_ONLY_BEFORE_DATE = false
LINE_BREAKER           = (\r?\n==##~~##~~  1E8N3D4E6V5E7N2T9 ~~##~~##==\r?\n)

TRANSFORMS-0parse_cam_header    = orig_action_name_for_stash_cam,orig_sid_for_stash_cam,orig_rid_for_stash_cam,sourcetype_for_stash_cam
TRANSFORMS-1sinkhole_cam_header = sinkhole_cam_header